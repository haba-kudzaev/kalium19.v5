@use '../config' as *;
@use '../prefixer' as *;
@use '../_dev' as *;
@use '../utils/is-valid' as *;

/// @access private
/// @type List
$_variants: padding-box border-box content-box;

// * `padding-box` - фон позиционируется относительно края элемента с учетом толщины границы
// * `border-box` - фон позиционируется относительно границы, при этом линия границы может перекрывать изображение
// * `content-box` - фон позиционируется относительно содержимого элемента

/// @name background-origin
/// @since 4.0.0
/// @group mixin.background
/// @access public
/// @author Haba Kudzaev
/// @link https://github.com/rx1310/kalium19
/// @example scss Пример использования в Sass (SCSS)
/// 	.block {
/// 		@include background-origin();
/// 	}
/// @example css Результат в CSS
/// 	.block {
/// 	  -webkit-background-origin: padding-box;
/// 	  -moz-background-origin: padding-box;
/// 	  -o-background-origin: padding-box;
/// 	  background-origin: padding-box;
/// 	}
/// @see {Variable} $prfxs_background-origin
/// @require {Mixin} prefixer
/// @param {String} $value [padding-box] - значение свойства `background-origin`
@mixin background-origin($value: padding-box) {

	@if is-valid($value, $_variants) {

		// ? [1] передаем префиксеру свойство, к которому надо добавить префиксы
		// ? [2] передаем префиксеру значение свойства
		// ? [3] передаем префиксеру список префиксов, которые должны быть добавлены к свойству
		@include prefixer(
			background-origin, // 1
			$value, // 2
			$prfxs_background-origin // 3
		);

	} @else {
		@include invalid-value-message($_variants, background-origin, $value);
	}

}
