@use '../../config' as *;
@use '../utils/map-deep-get' as *;
@use '../utils/contains-modifier' as *;
@use '../utils/get-block' as *;
@use '../utils/selector-to-string' as *;

/// @name b
/// @since 4.0.0
/// @group mixin.bem
/// @access public
/// @author Marcmintel
/// @link https://medium.com/@marcmintel
/// @example scss Пример использования в Sass (SCSS)
/// 	@include b(block) {
/// 		color: red;
/// 	}
/// @example css Результат в CSS
/// 	.block {
/// 	  color: red;
/// 	}
/// @param {String} $block - название блока
@mixin b($block) {
	.#{$block} {
		@content;
	}
}

/// @name e
/// @since 4.0.0
/// @group mixin.bem
/// @access public
/// @author Marcmintel
/// @link https://medium.com/@marcmintel
/// @example scss Пример использования в Sass (SCSS)
/// 	@include b(block) {
///
/// 		color: red;
///
/// 		@include e(element) {
/// 			background-color: #fff;
/// 		}
///
/// 	}
/// @example css Результат в CSS
/// 	.block {
/// 	  color: red;
/// 	}
///
/// 	.block__element {
/// 	  background-color: #fff;
/// 	}
/// @require {Function} map-deep-get
/// @require {Function} contains-modifier
/// @require {Function} get-block
/// @param {String} $element - название элемента
@mixin e($element) {
	$selector: &;
	@if contains-modifier($selector, map-deep-get($bem, modifier)) {
		$block: get-block($selector, map-deep-get($bem, modifier));
		@at-root {
			#{$selector} {
				#{$block + map-deep-get($bem, element) + $element} {
					@content;
				}
			}
		}
	} @else {
		@at-root {
			#{$selector + map-deep-get($bem, element) + $element } {
				@content;
			}
		}
	}
}

/// @name m
/// @since 4.
/// @group mixin.bem
/// @access public
/// @author Marcmintel
/// @link https://medium.com/@marcmintel
/// @example scss Пример использования в Sass (SCSS)
/// 	@include b(block) {
///
/// 		/* Block */
///
/// 		@include e(element) {
///
/// 			/* Element */
///
/// 			@include m(click) {
/// 				/* Modificator */
/// 			}
///
/// 		}
///
/// 	}
///
/// 	@include b(block2) {
///
/// 		/* Block 2 */
///
/// 		@include m(click) {
/// 			/* Modificator 2 */
/// 		}
///
/// 	}
/// @example css Результат в CSS
/// 	.block {
/// 	  /* Block */
/// 	}
/// 	.block__element {
/// 	  /* Element */
/// 	}
/// 	.block__element--click {
/// 	  /* Modificator */
/// 	}
/// 	.block2 {
/// 	  /* Block 2 */
/// 	}
/// 	.block2--click {
/// 	  /* Modificator 2 */
/// 	}
/// @require {Function} map-deep-get
/// @param {String} $modifier - название модификатора
@mixin m($modifier) {
	@at-root {
		#{&}#{ map-deep-get($bem, modifier) + $modifier } {
			@content;
		}
	}
}
