@use '../config' as *;
@use '../prefixer' as *;
@use '../utils/is-time' as *;

/// Миксин `animation-duration()` также является лишь обёрткой над
/// миксином `prefixer()`, который добавляет CSS-свойству `animation-duration`
/// браузерные префиксы (в нашем случае префиксы прописаны в
/// переменной `$prfxs_animation-duration`).
/// ---
/// @name animation-duration
/// @since 4.0.0
/// @group mixin.animation
/// @access public
/// @author Haba Kudzaev (rx1310)
/// @link https://github.com/rx1310/kalium19 Исходный код
/// @example scss Пример использования в Sass (SCSS)
/// 	.block {
/// 		@include animation-duration(.3s);
/// 	}
/// @example css Результат в CSS
/// 	.block {
/// 	  -webkit-animation-duration: 0.3s;
/// 	  -moz-animation-duration: 0.3s;
/// 	  -o-animation-duration: 0.3s;
/// 	  animation-duration: 0.3s;
/// 	}
/// @require {Mixin} prefixer
/// @see {Variable} $prfxs_animation-duration
/// @param {int | string} $duration [0s] - значение свойства `animation-duration`
@mixin animation-duration($duration: 0s) {

	@if is-time($duration) == true {

		// ? [1] передаем префиксеру свойство, к которому надо добавить префиксы
		// ? [2] передаем префиксеру значение свойства
		// ? [3] передаем префиксеру список префиксов, которые должны быть добавлены к свойству
		@include prefixer(
			animation-duration, // 1
			$duration, // 2
			$prfxs_animation-duration // 3
		);

	}

	// Писать блок `@else {}` нет смысла, т.к. функция `is-time()` сама
	// вбросит в консоль ошибку.

}
