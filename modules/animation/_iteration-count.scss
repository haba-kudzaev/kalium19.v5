@use '../config' as *;
@use '../prefixer' as *;
@use '../utils/is-int' as *;
@use '../_dev' as *;

/// Миксин `animation-iteration-count()` также является лишь обёрткой над
/// миксином `prefixer()`, который добавляет CSS-свойству
/// `animation-iteration-count` браузерные префиксы (в нашем случае префиксы
/// прописаны в переменной `$prfxs_animation-iteration-count`).
/// ---
/// @name  animation-iteration-count
/// @since 4.0.0
/// @group mixin.animation
/// @access public
/// @author Haba Kudzaev
/// @link https://github.com/rx1310/kalium19
/// @example scss Пример использования в Sass (SCSS)
/// 	.block {
/// 		@include animation-iteration-count(1);
/// 	}
/// @example css Результат в CSS
/// 	.block {
/// 	  -webkit-animation-iteration-count: 1;
/// 	  -moz-animation-iteration-count: 1;
/// 	  -o-animation-iteration-count: 1;
/// 	  animation-iteration-count: 1;
/// 	}
/// @see {Variable} $prfxs_animation-iteration-count
/// @require {Mixin} prefixer
/// @param {String | Number} $iteration-count [1] - значение свойства `$iteration-count`
@mixin animation-iteration-count($iteration-count: 1) {

	@if is-int($iteration-count) == true {

		// ? [1] передаем префиксеру свойство, к которому надо добавить префиксы
		// ? [2] передаем префиксеру значение свойства
		// ? [3] передаем префиксеру список префиксов, которые должны быть добавлены к свойству
		@include prefixer(
			animation-iteration-count, // 1
			$iteration-count, // 2
			$prfxs_animation-iteration-count // 3
		);

	} @else if $iteration-count == infinite {
		@include prefixer(
			animation-iteration-count,
			infinite,
			$prfxs_animation-iteration-count
		);
	} @else {
		@include error-invalid-value(animation-iteration-count, $iteration-count);
	}


}
