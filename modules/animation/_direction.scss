@use '../config' as *;
@use '../prefixer' as *;
@use '../utils/is-valid' as *;
@use '../_dev' as *;

/// @access private
/// @type List
$_variants: normal reverse alternate alternate-reverse;

/// Миксин `animation-direction()` также является лишь обёрткой над миксином `prefixer()`,
/// который добавляет CSS-свойству `animation-direction` браузерные префиксы
/// (в нашем случае префиксы прописаны в переменной `$prfxs_animation-direction`).
/// ---
/// @name animation-direction
/// @since 4.0.0
/// @group mixin.animation
/// @access public
/// @author Haba Kudzaev (rx1310)
/// @link https://github.com/rx1310/kalium19 Исходный код
/// @example scss Пример использования в Sass
/// 	.body {
/// 		@include animation-direction(normal);
/// 	}
/// @example css Результат в CSS
/// 	.body {
/// 	  -webkit-animation-direction: normal;
/// 	  -moz-animation-direction: normal;
/// 	  -o-animation-direction: normal;
/// 	  animation-direction: normal;
/// 	}
/// @see {Variable} $prfxs_animation-direction
/// @require {Mixin} prefixer
/// @require {Function} is-valid
/// @param {String} $direction [normal] - значение свойства `animation-direction`
@mixin animation-direction($direction: normal) {
	@if is-valid($direction, $_variants) == true {
		// ? [1] передаем префиксеру свойство, к которому надо добавить префиксы
		// ? [2] передаем префиксеру значение свойства
		// ? [3] передаем префиксеру список префиксов, которые должны быть добавлены к свойству
		@include prefixer(
			animation-direction, // 1
			$direction, // 2
			$prfxs_animation-direction // 3
		);
	} @else {
		@include error-invalid-value('animation-direction', $direction);
	}
}

/// Миксин `animation-direction-normal()` использует миксин
/// `animation-direction()` и передает ему значение `normal`
/// ---
/// @name animation-direction-normal
/// @since 4.0.0
/// @group mixin.animation
/// @access public
/// @author Haba Kudzaev (rx1310)
/// @link https://github.com/rx1310/kalium19 Исходный код
/// @example scss Пример использования в Sass
/// 	.body {
/// 		@include animation-direction-normal;
/// 	}
/// @example css Результат в CSS
/// 	.body {
/// 	  -webkit-animation-direction: normal;
/// 	  -moz-animation-direction: normal;
/// 	  -o-animation-direction: normal;
/// 	  animation-direction: normal;
/// 	}
/// @require {Mixin} animation-direction
@mixin animation-direction-normal {
	@include animation-direction(normal);
}

/// Миксин `animation-direction-alternate()` использует миксин
/// `animation-direction()` и передает ему значение `alternate`
/// ---
/// @name animation-direction-alternate
/// @since 4.0.0
/// @group mixin.animation
/// @access public
/// @author Haba Kudzaev (rx1310)
/// @link https://github.com/rx1310/kalium19 Исходный код
/// @example scss Пример использования в Sass
/// 	.body {
/// 		@include animation-direction-alternate;
/// 	}
/// @example css Результат в CSS
/// 	.body {
/// 	  -webkit-animation-direction: alternate;
/// 	  -moz-animation-direction: alternate;
/// 	  -o-animation-direction: alternate;
/// 	  animation-direction: alternate;
/// 	}
/// @require {Mixin} animation-direction
@mixin animation-direction-alternate {
	@include animation-direction(alternate);
}

/// Миксин `animation-direction-reverse()` использует миксин
/// `animation-direction()` и передает ему значение `reverse`
/// ---
/// @name animation-direction-reverse
/// @since 4.0.0
/// @group mixin.animation
/// @access public
/// @author Haba Kudzaev (rx1310)
/// @link https://github.com/rx1310/kalium19 Исходный код
/// @example scss Пример использования в Sass
/// 	.body {
/// 		@include animation-direction-reverse;
/// 	}
/// @example css Результат в CSS
/// 	.body {
/// 	  -webkit-animation-direction: reverse;
/// 	  -moz-animation-direction: reverse;
/// 	  -o-animation-direction: reverse;
/// 	  animation-direction: reverse;
/// 	}
/// @require {Mixin} animation-direction
@mixin animation-direction-reverse {
	@include animation-direction(reverse);
}

/// Миксин `animation-direction-alternate-reverse()` использует миксин
/// `animation-direction()` и передает ему значение `alternate-reverse`
/// ---
/// @name animation-direction-alternate-reverse
/// @since 4.0.0
/// @group mixin.animation
/// @access public
/// @author Haba Kudzaev (rx1310)
/// @link https://github.com/rx1310/kalium19 Исходный код
/// @example scss Пример использования в Sass
/// 	.body {
/// 		@include animation-direction-alternate-reverse;
/// 	}
/// @example css Результат в CSS
/// 	.body {
/// 	  -webkit-animation-direction: alternate-reverse;
/// 	  -moz-animation-direction: alternate-reverse;
/// 	  -o-animation-direction: alternate-reverse;
/// 	  animation-direction: alternate-reverse;
/// 	}
/// @require {Mixin} animation-direction
@mixin animation-direction-alternate-reverse {
	@include animation-direction(alternate-reverse);
}
